ARM GAS  /tmp/ccZfTGz6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.uart_putc_wrap,"ax",%progbits
  22              		.align	2
  23              		.global	uart_putc_wrap
  24              		.thumb
  25              		.thumb_func
  27              	uart_putc_wrap:
  28              	.LFB123:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccZfTGz6.s 			page 2


  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f4xx_hal.h"
  41:Src/main.c    **** #include "print.h"
  42:Src/main.c    **** #include "xprintf.h"
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  49:Src/main.c    **** 
  50:Src/main.c    **** UART_HandleTypeDef huart2;
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** static void MX_GPIO_Init(void);
  60:Src/main.c    **** static void MX_I2C1_Init(void);
  61:Src/main.c    **** static void MX_USART2_UART_Init(void);
  62:Src/main.c    **** 
  63:Src/main.c    **** enum{
  64:Src/main.c    **** 	WHO_AM_I=0x0f,
  65:Src/main.c    **** 	CTRL1_XL=0x10,
  66:Src/main.c    **** 	CTRL2_G=0x11,
  67:Src/main.c    **** 	CTRL3_C=0x12,
  68:Src/main.c    **** 	CTRL4_C=0x13,
  69:Src/main.c    **** 	CTRL5_C=0x14,
  70:Src/main.c    **** 	CTRL6_C=0x15,
  71:Src/main.c    **** 	CTRL7_G=0x16,
  72:Src/main.c    **** 	CTRL8_XL=0x17,
  73:Src/main.c    **** 	CTRL9_XL=0x18,
  74:Src/main.c    **** 	CTRL10_C=0x19,
  75:Src/main.c    **** 	OUT_TEMP_L=0x20,
  76:Src/main.c    **** 	OUT_TEMP_H=0x21,
  77:Src/main.c    **** 	OUTX_L_G=0x22,
  78:Src/main.c    **** 	OUTX_H_G=0x23,
  79:Src/main.c    **** 	OUTY_L_G=0x24,
  80:Src/main.c    **** 	OUTY_H_G=0x25,
  81:Src/main.c    **** 	OUTZ_L_G=0x26,
  82:Src/main.c    **** 	OUTZ_H_G=0x27,
  83:Src/main.c    **** 	OUTX_L_XL=0x28,
  84:Src/main.c    **** 	OUTX_H_XL=0x29,
  85:Src/main.c    **** 	OUTY_L_XL=0x2A,
  86:Src/main.c    **** 	OUTY_H_XL=0x2B,
ARM GAS  /tmp/ccZfTGz6.s 			page 3


  87:Src/main.c    **** 	OUTZ_L_XL=0x2C,
  88:Src/main.c    **** 	OUTZ_H_XL=0x2D
  89:Src/main.c    **** };
  90:Src/main.c    **** void USR_LSM6DSL_Set_Data(I2C_HandleTypeDef *hi2c,uint8_t add,uint8_t dat);
  91:Src/main.c    **** uint8_t USR_LSM6DSL_Get_Data(I2C_HandleTypeDef *hi2c,uint8_t add);
  92:Src/main.c    **** void USR_LSM6DSL_XL_Read_ALL(I2C_HandleTypeDef *hi2c,int16_t *dat);
  93:Src/main.c    **** void USR_LSM6DSL_GY_Read_ALL(I2C_HandleTypeDef *hi2c,int16_t *dat);
  94:Src/main.c    **** /* USER CODE BEGIN PFP */
  95:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  96:Src/main.c    **** //if unuse semihosting, comment out "#define debug"
  97:Src/main.c    **** //#define debug
  98:Src/main.c    **** /* USER CODE END PFP */
  99:Src/main.c    **** 
 100:Src/main.c    **** /* USER CODE BEGIN 0 */
 101:Src/main.c    **** /* USER CODE END 0 */
 102:Src/main.c    **** void uart_putc_wrap(uint8_t c){
  30              		.loc 1 102 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 103:Src/main.c    **** 	uart_putc(&huart2,c);
  40              		.loc 1 103 0
  41 0002 0146     		mov	r1, r0
  42 0004 0148     		ldr	r0, .L3
  43              	.LVL1:
  44 0006 FFF7FEFF 		bl	uart_putc
  45              	.LVL2:
  46 000a 08BD     		pop	{r3, pc}
  47              	.L4:
  48              		.align	2
  49              	.L3:
  50 000c 00000000 		.word	huart2
  51              		.cfi_endproc
  52              	.LFE123:
  54              		.section	.text.MX_GPIO_Init,"ax",%progbits
  55              		.align	2
  56              		.thumb
  57              		.thumb_func
  59              	MX_GPIO_Init:
  60              	.LFB128:
 104:Src/main.c    **** }
 105:Src/main.c    **** int main(void)
 106:Src/main.c    **** {
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN 1 */
 109:Src/main.c    **** 	int i=0;
 110:Src/main.c    **** 	uint8_t tmp=0;
 111:Src/main.c    **** 	int16_t accdata[3]={0};
 112:Src/main.c    **** 	int16_t gyrdata[3]={0};
 113:Src/main.c    **** 	int16_t gyravg[3]={0};
 114:Src/main.c    **** 
ARM GAS  /tmp/ccZfTGz6.s 			page 4


 115:Src/main.c    **** 	float angspdata[3]={0.0};
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE END 1 */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 122:Src/main.c    ****   HAL_Init();
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE BEGIN Init */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE END Init */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* Configure the system clock */
 129:Src/main.c    ****   SystemClock_Config();
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 132:Src/main.c    **** 	xdev_out(uart_putc_wrap);
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* USER CODE END SysInit */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* Initialize all configured peripherals */
 137:Src/main.c    ****   MX_GPIO_Init();
 138:Src/main.c    ****   MX_I2C1_Init();
 139:Src/main.c    ****   MX_USART2_UART_Init();
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE BEGIN 2 */
 142:Src/main.c    **** //	xprintf("Hello,STM%d!\r\n",32);
 143:Src/main.c    **** 
 144:Src/main.c    **** 	//LSM6DSL(ADD:0b1101011<<1)
 145:Src/main.c    **** //	HAL_I2C_Mem_Read(&hi2c1,0xD6,0x0f,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 146:Src/main.c    **** 	tmp=USR_LSM6DSL_Get_Data(&hi2c1,WHO_AM_I);
 147:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL1_XL,0b10000101);
 148:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL2_G,0b01100000);
 149:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL4_C,0b00000010);
 150:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL6_C,0b00000010);
 151:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL7_G,0b00000000);
 152:Src/main.c    **** 	HAL_Delay(1000);
 153:Src/main.c    **** 	
 154:Src/main.c    **** 	for(i=0;i<10;i++){
 155:Src/main.c    **** 		USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 156:Src/main.c    **** 		gyravg[0]+=gyrdata[0];
 157:Src/main.c    **** 		gyravg[1]+=gyrdata[1];
 158:Src/main.c    **** 		gyravg[2]+=gyrdata[2];
 159:Src/main.c    **** 	}
 160:Src/main.c    **** 	gyravg[0]/=10;
 161:Src/main.c    **** 	gyravg[1]/=10;
 162:Src/main.c    **** 	gyravg[2]/=10;
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE END 2 */
 165:Src/main.c    **** 
 166:Src/main.c    ****   /* Infinite loop */
 167:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 168:Src/main.c    ****   while (1)
 169:Src/main.c    ****   {
 170:Src/main.c    **** 		USR_LSM6DSL_XL_Read_ALL(&hi2c1,accdata);
 171:Src/main.c    **** 		USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
ARM GAS  /tmp/ccZfTGz6.s 			page 5


 172:Src/main.c    **** 		if(!HAL_GPIO_ReadPin(B1_GPIO_Port,B1_Pin)){
 173:Src/main.c    **** 			for(i=0;i<10;i++){
 174:Src/main.c    **** 					USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 175:Src/main.c    **** 					gyravg[0]+=gyrdata[0];
 176:Src/main.c    **** 					gyravg[1]+=gyrdata[1];
 177:Src/main.c    **** 					gyravg[2]+=gyrdata[2];
 178:Src/main.c    **** 				}
 179:Src/main.c    **** 			gyravg[0]/=10;
 180:Src/main.c    **** 			gyravg[1]/=10;
 181:Src/main.c    **** 			gyravg[2]/=10;
 182:Src/main.c    **** 		}
 183:Src/main.c    **** 		//gyro->angle speed
 184:Src/main.c    **** 		angspdata[0]+=((float)(gyrdata[0]-gyravg[0]))*0.001/245.0;
 185:Src/main.c    **** 		angspdata[1]+=((float)(gyrdata[1]-gyravg[1]))*0.001/245.0;
 186:Src/main.c    **** 		angspdata[2]+=((float)(gyrdata[2]-gyravg[2]))*0.001/245.0;
 187:Src/main.c    **** 	
 188:Src/main.c    **** 	/* USER CODE END WHILE */
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* USER CODE BEGIN 3 */
 191:Src/main.c    **** 		xprintf("%d %d %d "
 192:Src/main.c    **** 				,(int16_t)(angspdata[0])
 193:Src/main.c    **** 				,(int16_t)(angspdata[1])
 194:Src/main.c    **** 				,(int16_t)(angspdata[2]));
 195:Src/main.c    **** //		xprintf("%d %d %d ",gyrdata[0],gyrdata[1],gyrdata[2]);	
 196:Src/main.c    **** //		xprintf("%d %d %d "
 197:Src/main.c    **** //			,gyrdata[0]-gyravg[0]
 198:Src/main.c    **** //			,gyrdata[1]-gyravg[1]
 199:Src/main.c    **** //			,gyrdata[2]-gyravg[2]);
 200:Src/main.c    **** //		xprintf("%d %d %d ",accdata[0],accdata[1],accdata[2]);
 201:Src/main.c    **** 		xprintf("\n");
 202:Src/main.c    **** 		HAL_GPIO_TogglePin(LD2_GPIO_Port,LD2_Pin);
 203:Src/main.c    **** 		HAL_Delay(1);
 204:Src/main.c    **** 	}
 205:Src/main.c    ****   /* USER CODE END 3 */
 206:Src/main.c    **** 
 207:Src/main.c    **** }
 208:Src/main.c    **** 
 209:Src/main.c    **** /** System Clock Configuration
 210:Src/main.c    **** */
 211:Src/main.c    **** void SystemClock_Config(void)
 212:Src/main.c    **** {
 213:Src/main.c    **** 
 214:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 215:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 216:Src/main.c    **** 
 217:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 218:Src/main.c    ****     */
 219:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 220:Src/main.c    **** 
 221:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 222:Src/main.c    **** 
 223:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 224:Src/main.c    ****     */
 225:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 226:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 227:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccZfTGz6.s 			page 6


 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 234:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 235:Src/main.c    ****   {
 236:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 237:Src/main.c    ****   }
 238:Src/main.c    **** 
 239:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 240:Src/main.c    ****     */
 241:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 242:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 243:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 244:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 245:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 246:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 247:Src/main.c    **** 
 248:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 249:Src/main.c    ****   {
 250:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 251:Src/main.c    ****   }
 252:Src/main.c    **** 
 253:Src/main.c    ****     /**Configure the Systick interrupt time 
 254:Src/main.c    ****     */
 255:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 256:Src/main.c    **** 
 257:Src/main.c    ****     /**Configure the Systick 
 258:Src/main.c    ****     */
 259:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 260:Src/main.c    **** 
 261:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 262:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 263:Src/main.c    **** }
 264:Src/main.c    **** 
 265:Src/main.c    **** /* I2C1 init function */
 266:Src/main.c    **** static void MX_I2C1_Init(void)
 267:Src/main.c    **** {
 268:Src/main.c    **** 
 269:Src/main.c    ****   hi2c1.Instance = I2C1;
 270:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 271:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 272:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 273:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 274:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 275:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 276:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 277:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 278:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 279:Src/main.c    ****   {
 280:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 281:Src/main.c    ****   }
 282:Src/main.c    **** 
 283:Src/main.c    **** }
 284:Src/main.c    **** 
 285:Src/main.c    **** /* USART2 init function */
ARM GAS  /tmp/ccZfTGz6.s 			page 7


 286:Src/main.c    **** static void MX_USART2_UART_Init(void)
 287:Src/main.c    **** {
 288:Src/main.c    **** 
 289:Src/main.c    ****   huart2.Instance = USART2;
 290:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 291:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 292:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 293:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 294:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 295:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 296:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 297:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 298:Src/main.c    ****   {
 299:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 300:Src/main.c    ****   }
 301:Src/main.c    **** 
 302:Src/main.c    **** }
 303:Src/main.c    **** 
 304:Src/main.c    **** /** Configure pins as 
 305:Src/main.c    ****         * Analog 
 306:Src/main.c    ****         * Input 
 307:Src/main.c    ****         * Output
 308:Src/main.c    ****         * EVENT_OUT
 309:Src/main.c    ****         * EXTI
 310:Src/main.c    **** */
 311:Src/main.c    **** static void MX_GPIO_Init(void)
 312:Src/main.c    **** {
  61              		.loc 1 312 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 40
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 30B5     		push	{r4, r5, lr}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 12
  68              		.cfi_offset 4, -12
  69              		.cfi_offset 5, -8
  70              		.cfi_offset 14, -4
  71 0002 8BB0     		sub	sp, sp, #44
  72              	.LCFI2:
  73              		.cfi_def_cfa_offset 56
  74              	.LBB2:
 313:Src/main.c    **** 
 314:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* GPIO Ports Clock Enable */
 317:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  75              		.loc 1 317 0
  76 0004 0024     		movs	r4, #0
  77 0006 0194     		str	r4, [sp, #4]
  78 0008 214B     		ldr	r3, .L7
  79 000a 1A6B     		ldr	r2, [r3, #48]
  80 000c 42F00402 		orr	r2, r2, #4
  81 0010 1A63     		str	r2, [r3, #48]
  82 0012 1A6B     		ldr	r2, [r3, #48]
  83 0014 02F00402 		and	r2, r2, #4
  84 0018 0192     		str	r2, [sp, #4]
  85 001a 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccZfTGz6.s 			page 8


  86              	.LBE2:
  87              	.LBB3:
 318:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  88              		.loc 1 318 0
  89 001c 0294     		str	r4, [sp, #8]
  90 001e 1A6B     		ldr	r2, [r3, #48]
  91 0020 42F08002 		orr	r2, r2, #128
  92 0024 1A63     		str	r2, [r3, #48]
  93 0026 1A6B     		ldr	r2, [r3, #48]
  94 0028 02F08002 		and	r2, r2, #128
  95 002c 0292     		str	r2, [sp, #8]
  96 002e 029A     		ldr	r2, [sp, #8]
  97              	.LBE3:
  98              	.LBB4:
 319:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  99              		.loc 1 319 0
 100 0030 0394     		str	r4, [sp, #12]
 101 0032 1A6B     		ldr	r2, [r3, #48]
 102 0034 42F00102 		orr	r2, r2, #1
 103 0038 1A63     		str	r2, [r3, #48]
 104 003a 1A6B     		ldr	r2, [r3, #48]
 105 003c 02F00102 		and	r2, r2, #1
 106 0040 0392     		str	r2, [sp, #12]
 107 0042 039A     		ldr	r2, [sp, #12]
 108              	.LBE4:
 109              	.LBB5:
 320:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 110              		.loc 1 320 0
 111 0044 0494     		str	r4, [sp, #16]
 112 0046 1A6B     		ldr	r2, [r3, #48]
 113 0048 42F00202 		orr	r2, r2, #2
 114 004c 1A63     		str	r2, [r3, #48]
 115 004e 1B6B     		ldr	r3, [r3, #48]
 116 0050 03F00203 		and	r3, r3, #2
 117 0054 0493     		str	r3, [sp, #16]
 118 0056 049B     		ldr	r3, [sp, #16]
 119              	.LBE5:
 321:Src/main.c    **** 
 322:Src/main.c    ****   /*Configure GPIO pin Output Level */
 323:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 120              		.loc 1 323 0
 121 0058 0E4D     		ldr	r5, .L7+4
 122 005a 2246     		mov	r2, r4
 123 005c 2021     		movs	r1, #32
 124 005e 2846     		mov	r0, r5
 125 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 126              	.LVL3:
 324:Src/main.c    **** 
 325:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 326:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 127              		.loc 1 326 0
 128 0064 4FF40053 		mov	r3, #8192
 129 0068 0593     		str	r3, [sp, #20]
 327:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 130              		.loc 1 327 0
 131 006a 0B4B     		ldr	r3, .L7+8
 132 006c 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccZfTGz6.s 			page 9


 328:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 328 0
 134 006e 0794     		str	r4, [sp, #28]
 329:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 135              		.loc 1 329 0
 136 0070 05A9     		add	r1, sp, #20
 137 0072 0A48     		ldr	r0, .L7+12
 138 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL4:
 330:Src/main.c    **** 
 331:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 332:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 140              		.loc 1 332 0
 141 0078 2023     		movs	r3, #32
 142 007a 0593     		str	r3, [sp, #20]
 333:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 143              		.loc 1 333 0
 144 007c 0123     		movs	r3, #1
 145 007e 0693     		str	r3, [sp, #24]
 334:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 334 0
 147 0080 0794     		str	r4, [sp, #28]
 335:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 335 0
 149 0082 0894     		str	r4, [sp, #32]
 336:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 150              		.loc 1 336 0
 151 0084 05A9     		add	r1, sp, #20
 152 0086 2846     		mov	r0, r5
 153 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL5:
 337:Src/main.c    **** 
 338:Src/main.c    **** }
 155              		.loc 1 338 0
 156 008c 0BB0     		add	sp, sp, #44
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 12
 159              		@ sp needed
 160 008e 30BD     		pop	{r4, r5, pc}
 161              	.L8:
 162              		.align	2
 163              	.L7:
 164 0090 00380240 		.word	1073887232
 165 0094 00000240 		.word	1073872896
 166 0098 00002110 		.word	270598144
 167 009c 00080240 		.word	1073874944
 168              		.cfi_endproc
 169              	.LFE128:
 171              		.section	.text.USR_LSM6DSL_Set_Data,"ax",%progbits
 172              		.align	2
 173              		.global	USR_LSM6DSL_Set_Data
 174              		.thumb
 175              		.thumb_func
 177              	USR_LSM6DSL_Set_Data:
 178              	.LFB129:
 339:Src/main.c    **** 
 340:Src/main.c    **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/ccZfTGz6.s 			page 10


 341:Src/main.c    **** void USR_LSM6DSL_Set_Data(I2C_HandleTypeDef *hi2c,uint8_t add,uint8_t dat){
 179              		.loc 1 341 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL6:
 184 0000 10B5     		push	{r4, lr}
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 4, -8
 188              		.cfi_offset 14, -4
 189 0002 86B0     		sub	sp, sp, #24
 190              	.LCFI5:
 191              		.cfi_def_cfa_offset 32
 192 0004 06AC     		add	r4, sp, #24
 193 0006 04F8012D 		strb	r2, [r4, #-1]!
 342:Src/main.c    **** 	HAL_I2C_Mem_Write(hi2c,0xD6,add,I2C_MEMADD_SIZE_8BIT,&dat,1,10);
 194              		.loc 1 342 0
 195 000a 0A23     		movs	r3, #10
 196 000c 0293     		str	r3, [sp, #8]
 197 000e 0123     		movs	r3, #1
 198 0010 0193     		str	r3, [sp, #4]
 199 0012 0094     		str	r4, [sp]
 200 0014 0A46     		mov	r2, r1
 201              	.LVL7:
 202 0016 D621     		movs	r1, #214
 203              	.LVL8:
 204 0018 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 205              	.LVL9:
 343:Src/main.c    **** }
 206              		.loc 1 343 0
 207 001c 06B0     		add	sp, sp, #24
 208              	.LCFI6:
 209              		.cfi_def_cfa_offset 8
 210              		@ sp needed
 211 001e 10BD     		pop	{r4, pc}
 212              		.cfi_endproc
 213              	.LFE129:
 215              		.section	.text.USR_LSM6DSL_Get_Data,"ax",%progbits
 216              		.align	2
 217              		.global	USR_LSM6DSL_Get_Data
 218              		.thumb
 219              		.thumb_func
 221              	USR_LSM6DSL_Get_Data:
 222              	.LFB130:
 344:Src/main.c    **** uint8_t USR_LSM6DSL_Get_Data(I2C_HandleTypeDef *hi2c,uint8_t add){
 223              		.loc 1 344 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              	.LVL10:
 228 0000 00B5     		push	{lr}
 229              	.LCFI7:
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 14, -4
 232 0002 87B0     		sub	sp, sp, #28
 233              	.LCFI8:
ARM GAS  /tmp/ccZfTGz6.s 			page 11


 234              		.cfi_def_cfa_offset 32
 345:Src/main.c    **** 	uint8_t tmp=0;
 235              		.loc 1 345 0
 236 0004 06AA     		add	r2, sp, #24
 237 0006 0023     		movs	r3, #0
 238 0008 02F8013D 		strb	r3, [r2, #-1]!
 346:Src/main.c    **** 	HAL_I2C_Mem_Read(&hi2c1,0xD6,add,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 239              		.loc 1 346 0
 240 000c 0A23     		movs	r3, #10
 241 000e 0293     		str	r3, [sp, #8]
 242 0010 0123     		movs	r3, #1
 243 0012 0193     		str	r3, [sp, #4]
 244 0014 0092     		str	r2, [sp]
 245 0016 0A46     		mov	r2, r1
 246 0018 D621     		movs	r1, #214
 247              	.LVL11:
 248 001a 0448     		ldr	r0, .L13
 249              	.LVL12:
 250 001c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 251              	.LVL13:
 347:Src/main.c    **** 	return tmp;
 348:Src/main.c    **** }
 252              		.loc 1 348 0
 253 0020 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 254 0024 07B0     		add	sp, sp, #28
 255              	.LCFI9:
 256              		.cfi_def_cfa_offset 4
 257              		@ sp needed
 258 0026 5DF804FB 		ldr	pc, [sp], #4
 259              	.L14:
 260 002a 00BF     		.align	2
 261              	.L13:
 262 002c 00000000 		.word	hi2c1
 263              		.cfi_endproc
 264              	.LFE130:
 266              		.section	.text.USR_LSM6DSL_XL_Read_ALL,"ax",%progbits
 267              		.align	2
 268              		.global	USR_LSM6DSL_XL_Read_ALL
 269              		.thumb
 270              		.thumb_func
 272              	USR_LSM6DSL_XL_Read_ALL:
 273              	.LFB131:
 349:Src/main.c    **** void USR_LSM6DSL_XL_Read_ALL(I2C_HandleTypeDef *hi2c,int16_t *data){
 274              		.loc 1 349 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              	.LVL14:
 279 0000 38B5     		push	{r3, r4, r5, lr}
 280              	.LCFI10:
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 3, -16
 283              		.cfi_offset 4, -12
 284              		.cfi_offset 5, -8
 285              		.cfi_offset 14, -4
 286 0002 0546     		mov	r5, r0
 287 0004 0C46     		mov	r4, r1
ARM GAS  /tmp/ccZfTGz6.s 			page 12


 350:Src/main.c    **** /*
 351:Src/main.c    **** 	uint8_t tmp=0;
 352:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x28,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 353:Src/main.c    **** 	data[0]=tmp;
 354:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x29,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 355:Src/main.c    **** 	data[0]|=tmp<<8;
 356:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x2A,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 357:Src/main.c    **** 	data[1]=tmp;
 358:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x2B,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 359:Src/main.c    **** 	data[1]|=tmp<<8;
 360:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x2C,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 361:Src/main.c    **** 	data[2]=tmp;
 362:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x2D,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 363:Src/main.c    **** 	data[2]|=tmp<<8;
 364:Src/main.c    **** */
 365:Src/main.c    **** 	data[0] =USR_LSM6DSL_Get_Data(hi2c,OUTX_L_XL);
 288              		.loc 1 365 0
 289 0006 2821     		movs	r1, #40
 290              	.LVL15:
 291 0008 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 292              	.LVL16:
 293 000c 2080     		strh	r0, [r4]	@ movhi
 366:Src/main.c    **** 	data[0]|=USR_LSM6DSL_Get_Data(hi2c,OUTX_H_XL)<<8;
 294              		.loc 1 366 0
 295 000e 2921     		movs	r1, #41
 296 0010 2846     		mov	r0, r5
 297 0012 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 298              	.LVL17:
 299 0016 2388     		ldrh	r3, [r4]
 300 0018 43EA0020 		orr	r0, r3, r0, lsl #8
 301 001c 2080     		strh	r0, [r4]	@ movhi
 367:Src/main.c    **** 	data[1] =USR_LSM6DSL_Get_Data(hi2c,OUTY_L_XL);
 302              		.loc 1 367 0
 303 001e 2A21     		movs	r1, #42
 304 0020 2846     		mov	r0, r5
 305 0022 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 306              	.LVL18:
 307 0026 6080     		strh	r0, [r4, #2]	@ movhi
 368:Src/main.c    **** 	data[1]|=USR_LSM6DSL_Get_Data(hi2c,OUTY_H_XL)<<8;
 308              		.loc 1 368 0
 309 0028 2B21     		movs	r1, #43
 310 002a 2846     		mov	r0, r5
 311 002c FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 312              	.LVL19:
 313 0030 6388     		ldrh	r3, [r4, #2]
 314 0032 43EA0020 		orr	r0, r3, r0, lsl #8
 315 0036 6080     		strh	r0, [r4, #2]	@ movhi
 369:Src/main.c    **** 	data[2] =USR_LSM6DSL_Get_Data(hi2c,OUTZ_L_XL);
 316              		.loc 1 369 0
 317 0038 2C21     		movs	r1, #44
 318 003a 2846     		mov	r0, r5
 319 003c FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 320              	.LVL20:
 321 0040 A080     		strh	r0, [r4, #4]	@ movhi
 370:Src/main.c    **** 	data[2]|=USR_LSM6DSL_Get_Data(hi2c,OUTZ_H_XL)<<8;
 322              		.loc 1 370 0
 323 0042 2D21     		movs	r1, #45
ARM GAS  /tmp/ccZfTGz6.s 			page 13


 324 0044 2846     		mov	r0, r5
 325 0046 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 326              	.LVL21:
 327 004a A388     		ldrh	r3, [r4, #4]
 328 004c 43EA0020 		orr	r0, r3, r0, lsl #8
 329 0050 A080     		strh	r0, [r4, #4]	@ movhi
 330 0052 38BD     		pop	{r3, r4, r5, pc}
 331              		.cfi_endproc
 332              	.LFE131:
 334              		.section	.text.USR_LSM6DSL_GY_Read_ALL,"ax",%progbits
 335              		.align	2
 336              		.global	USR_LSM6DSL_GY_Read_ALL
 337              		.thumb
 338              		.thumb_func
 340              	USR_LSM6DSL_GY_Read_ALL:
 341              	.LFB132:
 371:Src/main.c    **** }
 372:Src/main.c    **** void USR_LSM6DSL_GY_Read_ALL(I2C_HandleTypeDef *hi2c,int16_t *data){
 342              		.loc 1 372 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              	.LVL22:
 347 0000 38B5     		push	{r3, r4, r5, lr}
 348              	.LCFI11:
 349              		.cfi_def_cfa_offset 16
 350              		.cfi_offset 3, -16
 351              		.cfi_offset 4, -12
 352              		.cfi_offset 5, -8
 353              		.cfi_offset 14, -4
 354 0002 0546     		mov	r5, r0
 355 0004 0C46     		mov	r4, r1
 373:Src/main.c    **** 	/*
 374:Src/main.c    **** 	uint8_t tmp=0;
 375:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x22,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 376:Src/main.c    **** 	data[0]=tmp;
 377:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x23,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 378:Src/main.c    **** 	data[0]|=tmp<<8;
 379:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x24,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 380:Src/main.c    **** 	data[1]=tmp;
 381:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x25,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 382:Src/main.c    **** 	data[1]|=tmp<<8;
 383:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x26,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 384:Src/main.c    **** 	data[2]=tmp;
 385:Src/main.c    **** 	HAL_I2C_Mem_Read(hi2c,0xD6,0x27,I2C_MEMADD_SIZE_8BIT,&tmp,1,10);
 386:Src/main.c    **** 	data[2]|=tmp<<8;
 387:Src/main.c    **** 	*/
 388:Src/main.c    **** 	data[0] =USR_LSM6DSL_Get_Data(hi2c,OUTX_L_G);
 356              		.loc 1 388 0
 357 0006 2221     		movs	r1, #34
 358              	.LVL23:
 359 0008 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 360              	.LVL24:
 361 000c 2080     		strh	r0, [r4]	@ movhi
 389:Src/main.c    **** 	data[0]|=USR_LSM6DSL_Get_Data(hi2c,OUTX_H_G)<<8;
 362              		.loc 1 389 0
 363 000e 2321     		movs	r1, #35
ARM GAS  /tmp/ccZfTGz6.s 			page 14


 364 0010 2846     		mov	r0, r5
 365 0012 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 366              	.LVL25:
 367 0016 2388     		ldrh	r3, [r4]
 368 0018 43EA0020 		orr	r0, r3, r0, lsl #8
 369 001c 2080     		strh	r0, [r4]	@ movhi
 390:Src/main.c    **** 	data[1] =USR_LSM6DSL_Get_Data(hi2c,OUTY_L_G);
 370              		.loc 1 390 0
 371 001e 2421     		movs	r1, #36
 372 0020 2846     		mov	r0, r5
 373 0022 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 374              	.LVL26:
 375 0026 6080     		strh	r0, [r4, #2]	@ movhi
 391:Src/main.c    **** 	data[1]|=USR_LSM6DSL_Get_Data(hi2c,OUTY_H_G)<<8;
 376              		.loc 1 391 0
 377 0028 2521     		movs	r1, #37
 378 002a 2846     		mov	r0, r5
 379 002c FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 380              	.LVL27:
 381 0030 6388     		ldrh	r3, [r4, #2]
 382 0032 43EA0020 		orr	r0, r3, r0, lsl #8
 383 0036 6080     		strh	r0, [r4, #2]	@ movhi
 392:Src/main.c    **** 	data[2] =USR_LSM6DSL_Get_Data(hi2c,OUTZ_L_G);
 384              		.loc 1 392 0
 385 0038 2621     		movs	r1, #38
 386 003a 2846     		mov	r0, r5
 387 003c FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 388              	.LVL28:
 389 0040 A080     		strh	r0, [r4, #4]	@ movhi
 393:Src/main.c    **** 	data[2]|=USR_LSM6DSL_Get_Data(hi2c,OUTZ_H_G)<<8;
 390              		.loc 1 393 0
 391 0042 2721     		movs	r1, #39
 392 0044 2846     		mov	r0, r5
 393 0046 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 394              	.LVL29:
 395 004a A388     		ldrh	r3, [r4, #4]
 396 004c 43EA0020 		orr	r0, r3, r0, lsl #8
 397 0050 A080     		strh	r0, [r4, #4]	@ movhi
 398 0052 38BD     		pop	{r3, r4, r5, pc}
 399              		.cfi_endproc
 400              	.LFE132:
 402              		.section	.text._Error_Handler,"ax",%progbits
 403              		.align	2
 404              		.global	_Error_Handler
 405              		.thumb
 406              		.thumb_func
 408              	_Error_Handler:
 409              	.LFB133:
 394:Src/main.c    **** }
 395:Src/main.c    **** /* USER CODE END 4 */
 396:Src/main.c    **** 
 397:Src/main.c    **** /**
 398:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 399:Src/main.c    ****   * @param  None
 400:Src/main.c    ****   * @retval None
 401:Src/main.c    ****   */
 402:Src/main.c    **** void _Error_Handler(char * file, int line)
ARM GAS  /tmp/ccZfTGz6.s 			page 15


 403:Src/main.c    **** {
 410              		.loc 1 403 0
 411              		.cfi_startproc
 412              		@ Volatile: function does not return.
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LVL30:
 417              	.L20:
 418 0000 FEE7     		b	.L20
 419              		.cfi_endproc
 420              	.LFE133:
 422 0002 00BF     		.section	.text.MX_I2C1_Init,"ax",%progbits
 423              		.align	2
 424              		.thumb
 425              		.thumb_func
 427              	MX_I2C1_Init:
 428              	.LFB126:
 267:Src/main.c    **** 
 429              		.loc 1 267 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 267:Src/main.c    **** 
 433              		.loc 1 267 0
 434 0000 08B5     		push	{r3, lr}
 435              	.LCFI12:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
 269:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 439              		.loc 1 269 0
 440 0002 0C48     		ldr	r0, .L24
 441 0004 0C4B     		ldr	r3, .L24+4
 442 0006 0360     		str	r3, [r0]
 270:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 443              		.loc 1 270 0
 444 0008 0C4B     		ldr	r3, .L24+8
 445 000a 4360     		str	r3, [r0, #4]
 271:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 446              		.loc 1 271 0
 447 000c 0023     		movs	r3, #0
 448 000e 8360     		str	r3, [r0, #8]
 272:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 449              		.loc 1 272 0
 450 0010 C360     		str	r3, [r0, #12]
 273:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 451              		.loc 1 273 0
 452 0012 4FF48042 		mov	r2, #16384
 453 0016 0261     		str	r2, [r0, #16]
 274:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 454              		.loc 1 274 0
 455 0018 4361     		str	r3, [r0, #20]
 275:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 456              		.loc 1 275 0
 457 001a 8361     		str	r3, [r0, #24]
 276:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  /tmp/ccZfTGz6.s 			page 16


 458              		.loc 1 276 0
 459 001c C361     		str	r3, [r0, #28]
 277:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 460              		.loc 1 277 0
 461 001e 0362     		str	r3, [r0, #32]
 278:Src/main.c    ****   {
 462              		.loc 1 278 0
 463 0020 FFF7FEFF 		bl	HAL_I2C_Init
 464              	.LVL31:
 465 0024 20B1     		cbz	r0, .L21
 280:Src/main.c    ****   }
 466              		.loc 1 280 0
 467 0026 4FF48C71 		mov	r1, #280
 468 002a 0548     		ldr	r0, .L24+12
 469 002c FFF7FEFF 		bl	_Error_Handler
 470              	.LVL32:
 471              	.L21:
 472 0030 08BD     		pop	{r3, pc}
 473              	.L25:
 474 0032 00BF     		.align	2
 475              	.L24:
 476 0034 00000000 		.word	hi2c1
 477 0038 00540040 		.word	1073763328
 478 003c A0860100 		.word	100000
 479 0040 00000000 		.word	.LC0
 480              		.cfi_endproc
 481              	.LFE126:
 483              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 484              		.align	2
 485              		.thumb
 486              		.thumb_func
 488              	MX_USART2_UART_Init:
 489              	.LFB127:
 287:Src/main.c    **** 
 490              		.loc 1 287 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494 0000 08B5     		push	{r3, lr}
 495              	.LCFI13:
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 3, -8
 498              		.cfi_offset 14, -4
 289:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 499              		.loc 1 289 0
 500 0002 0B48     		ldr	r0, .L29
 501 0004 0B4B     		ldr	r3, .L29+4
 502 0006 0360     		str	r3, [r0]
 290:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 503              		.loc 1 290 0
 504 0008 4FF4E133 		mov	r3, #115200
 505 000c 4360     		str	r3, [r0, #4]
 291:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 506              		.loc 1 291 0
 507 000e 0023     		movs	r3, #0
 508 0010 8360     		str	r3, [r0, #8]
 292:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccZfTGz6.s 			page 17


 509              		.loc 1 292 0
 510 0012 C360     		str	r3, [r0, #12]
 293:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 511              		.loc 1 293 0
 512 0014 0361     		str	r3, [r0, #16]
 294:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 513              		.loc 1 294 0
 514 0016 0C22     		movs	r2, #12
 515 0018 4261     		str	r2, [r0, #20]
 295:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 516              		.loc 1 295 0
 517 001a 8361     		str	r3, [r0, #24]
 296:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 518              		.loc 1 296 0
 519 001c C361     		str	r3, [r0, #28]
 297:Src/main.c    ****   {
 520              		.loc 1 297 0
 521 001e FFF7FEFF 		bl	HAL_UART_Init
 522              	.LVL33:
 523 0022 20B1     		cbz	r0, .L26
 299:Src/main.c    ****   }
 524              		.loc 1 299 0
 525 0024 40F22B11 		movw	r1, #299
 526 0028 0348     		ldr	r0, .L29+8
 527 002a FFF7FEFF 		bl	_Error_Handler
 528              	.LVL34:
 529              	.L26:
 530 002e 08BD     		pop	{r3, pc}
 531              	.L30:
 532              		.align	2
 533              	.L29:
 534 0030 00000000 		.word	huart2
 535 0034 00440040 		.word	1073759232
 536 0038 00000000 		.word	.LC0
 537              		.cfi_endproc
 538              	.LFE127:
 540              		.section	.text.SystemClock_Config,"ax",%progbits
 541              		.align	2
 542              		.global	SystemClock_Config
 543              		.thumb
 544              		.thumb_func
 546              	SystemClock_Config:
 547              	.LFB125:
 212:Src/main.c    **** 
 548              		.loc 1 212 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 80
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 00B5     		push	{lr}
 553              	.LCFI14:
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 14, -4
 556 0002 95B0     		sub	sp, sp, #84
 557              	.LCFI15:
 558              		.cfi_def_cfa_offset 88
 559              	.LBB6:
 219:Src/main.c    **** 
ARM GAS  /tmp/ccZfTGz6.s 			page 18


 560              		.loc 1 219 0
 561 0004 0022     		movs	r2, #0
 562 0006 0192     		str	r2, [sp, #4]
 563 0008 2A4B     		ldr	r3, .L35
 564 000a 196C     		ldr	r1, [r3, #64]
 565 000c 41F08051 		orr	r1, r1, #268435456
 566 0010 1964     		str	r1, [r3, #64]
 567 0012 1B6C     		ldr	r3, [r3, #64]
 568 0014 03F08053 		and	r3, r3, #268435456
 569 0018 0193     		str	r3, [sp, #4]
 570 001a 019B     		ldr	r3, [sp, #4]
 571              	.LBE6:
 572              	.LBB7:
 221:Src/main.c    **** 
 573              		.loc 1 221 0
 574 001c 0292     		str	r2, [sp, #8]
 575 001e 2649     		ldr	r1, .L35+4
 576 0020 0B68     		ldr	r3, [r1]
 577 0022 23F44043 		bic	r3, r3, #49152
 578 0026 43F40043 		orr	r3, r3, #32768
 579 002a 0B60     		str	r3, [r1]
 580 002c 0B68     		ldr	r3, [r1]
 581 002e 03F44043 		and	r3, r3, #49152
 582 0032 0293     		str	r3, [sp, #8]
 583 0034 029B     		ldr	r3, [sp, #8]
 584              	.LBE7:
 225:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 585              		.loc 1 225 0
 586 0036 0221     		movs	r1, #2
 587 0038 0891     		str	r1, [sp, #32]
 226:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 588              		.loc 1 226 0
 589 003a 0123     		movs	r3, #1
 590 003c 0B93     		str	r3, [sp, #44]
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 591              		.loc 1 227 0
 592 003e 1023     		movs	r3, #16
 593 0040 0C93     		str	r3, [sp, #48]
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 594              		.loc 1 228 0
 595 0042 0E91     		str	r1, [sp, #56]
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 596              		.loc 1 229 0
 597 0044 0F92     		str	r2, [sp, #60]
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 598              		.loc 1 230 0
 599 0046 1093     		str	r3, [sp, #64]
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 600              		.loc 1 231 0
 601 0048 4FF4A873 		mov	r3, #336
 602 004c 1193     		str	r3, [sp, #68]
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 603              		.loc 1 232 0
 604 004e 0423     		movs	r3, #4
 605 0050 1293     		str	r3, [sp, #72]
 233:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 606              		.loc 1 233 0
ARM GAS  /tmp/ccZfTGz6.s 			page 19


 607 0052 0723     		movs	r3, #7
 608 0054 1393     		str	r3, [sp, #76]
 234:Src/main.c    ****   {
 609              		.loc 1 234 0
 610 0056 08A8     		add	r0, sp, #32
 611 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 612              	.LVL35:
 613 005c 18B1     		cbz	r0, .L32
 236:Src/main.c    ****   }
 614              		.loc 1 236 0
 615 005e EC21     		movs	r1, #236
 616 0060 1648     		ldr	r0, .L35+8
 617 0062 FFF7FEFF 		bl	_Error_Handler
 618              	.LVL36:
 619              	.L32:
 241:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 620              		.loc 1 241 0
 621 0066 0F23     		movs	r3, #15
 622 0068 0393     		str	r3, [sp, #12]
 243:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 623              		.loc 1 243 0
 624 006a 0221     		movs	r1, #2
 625 006c 0491     		str	r1, [sp, #16]
 244:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 626              		.loc 1 244 0
 627 006e 0023     		movs	r3, #0
 628 0070 0593     		str	r3, [sp, #20]
 245:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 629              		.loc 1 245 0
 630 0072 4FF48052 		mov	r2, #4096
 631 0076 0692     		str	r2, [sp, #24]
 246:Src/main.c    **** 
 632              		.loc 1 246 0
 633 0078 0793     		str	r3, [sp, #28]
 248:Src/main.c    ****   {
 634              		.loc 1 248 0
 635 007a 03A8     		add	r0, sp, #12
 636 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 637              	.LVL37:
 638 0080 18B1     		cbz	r0, .L33
 250:Src/main.c    ****   }
 639              		.loc 1 250 0
 640 0082 FA21     		movs	r1, #250
 641 0084 0D48     		ldr	r0, .L35+8
 642 0086 FFF7FEFF 		bl	_Error_Handler
 643              	.LVL38:
 644              	.L33:
 255:Src/main.c    **** 
 645              		.loc 1 255 0
 646 008a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 647              	.LVL39:
 648 008e 0C4B     		ldr	r3, .L35+12
 649 0090 A3FB0030 		umull	r3, r0, r3, r0
 650 0094 8009     		lsrs	r0, r0, #6
 651 0096 FFF7FEFF 		bl	HAL_SYSTICK_Config
 652              	.LVL40:
 259:Src/main.c    **** 
ARM GAS  /tmp/ccZfTGz6.s 			page 20


 653              		.loc 1 259 0
 654 009a 0420     		movs	r0, #4
 655 009c FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 656              	.LVL41:
 262:Src/main.c    **** }
 657              		.loc 1 262 0
 658 00a0 0022     		movs	r2, #0
 659 00a2 1146     		mov	r1, r2
 660 00a4 4FF0FF30 		mov	r0, #-1
 661 00a8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 662              	.LVL42:
 263:Src/main.c    **** 
 663              		.loc 1 263 0
 664 00ac 15B0     		add	sp, sp, #84
 665              	.LCFI16:
 666              		.cfi_def_cfa_offset 4
 667              		@ sp needed
 668 00ae 5DF804FB 		ldr	pc, [sp], #4
 669              	.L36:
 670 00b2 00BF     		.align	2
 671              	.L35:
 672 00b4 00380240 		.word	1073887232
 673 00b8 00700040 		.word	1073770496
 674 00bc 00000000 		.word	.LC0
 675 00c0 D34D6210 		.word	274877907
 676              		.cfi_endproc
 677              	.LFE125:
 679              		.global	__aeabi_f2d
 680              		.global	__aeabi_dmul
 681              		.global	__aeabi_ddiv
 682              		.global	__aeabi_dadd
 683              		.global	__aeabi_d2f
 684              		.section	.text.main,"ax",%progbits
 685              		.align	2
 686              		.global	main
 687              		.thumb
 688              		.thumb_func
 690              	main:
 691              	.LFB124:
 106:Src/main.c    **** 
 692              		.loc 1 106 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 56
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696 0000 30B5     		push	{r4, r5, lr}
 697              	.LCFI17:
 698              		.cfi_def_cfa_offset 12
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 5, -8
 701              		.cfi_offset 14, -4
 702 0002 2DED028B 		vpush.64	{d8}
 703              	.LCFI18:
 704              		.cfi_def_cfa_offset 20
 705              		.cfi_offset 80, -20
 706              		.cfi_offset 81, -16
 707 0006 8FB0     		sub	sp, sp, #60
 708              	.LCFI19:
ARM GAS  /tmp/ccZfTGz6.s 			page 21


 709              		.cfi_def_cfa_offset 80
 710              	.LVL43:
 111:Src/main.c    **** 	int16_t gyrdata[3]={0};
 711              		.loc 1 111 0
 712 0008 0024     		movs	r4, #0
 713 000a 0C94     		str	r4, [sp, #48]
 714 000c ADF83440 		strh	r4, [sp, #52]	@ movhi
 112:Src/main.c    **** 	int16_t gyravg[3]={0};
 715              		.loc 1 112 0
 716 0010 0A94     		str	r4, [sp, #40]
 717 0012 ADF82C40 		strh	r4, [sp, #44]	@ movhi
 113:Src/main.c    **** 
 718              		.loc 1 113 0
 719 0016 0894     		str	r4, [sp, #32]
 720 0018 ADF82440 		strh	r4, [sp, #36]	@ movhi
 115:Src/main.c    **** 
 721              		.loc 1 115 0
 722 001c 0594     		str	r4, [sp, #20]
 723 001e 0694     		str	r4, [sp, #24]
 724 0020 0794     		str	r4, [sp, #28]
 122:Src/main.c    **** 
 725              		.loc 1 122 0
 726 0022 FFF7FEFF 		bl	HAL_Init
 727              	.LVL44:
 129:Src/main.c    **** 
 728              		.loc 1 129 0
 729 0026 FFF7FEFF 		bl	SystemClock_Config
 730              	.LVL45:
 132:Src/main.c    **** 
 731              		.loc 1 132 0
 732 002a A34A     		ldr	r2, .L46+16
 733 002c A34B     		ldr	r3, .L46+20
 734 002e 1A60     		str	r2, [r3]
 137:Src/main.c    ****   MX_I2C1_Init();
 735              		.loc 1 137 0
 736 0030 FFF7FEFF 		bl	MX_GPIO_Init
 737              	.LVL46:
 138:Src/main.c    ****   MX_USART2_UART_Init();
 738              		.loc 1 138 0
 739 0034 FFF7FEFF 		bl	MX_I2C1_Init
 740              	.LVL47:
 139:Src/main.c    **** 
 741              		.loc 1 139 0
 742 0038 FFF7FEFF 		bl	MX_USART2_UART_Init
 743              	.LVL48:
 146:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL1_XL,0b10000101);
 744              		.loc 1 146 0
 745 003c A04D     		ldr	r5, .L46+24
 746 003e 0F21     		movs	r1, #15
 747 0040 2846     		mov	r0, r5
 748 0042 FFF7FEFF 		bl	USR_LSM6DSL_Get_Data
 749              	.LVL49:
 147:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL2_G,0b01100000);
 750              		.loc 1 147 0
 751 0046 8522     		movs	r2, #133
 752 0048 1021     		movs	r1, #16
 753 004a 2846     		mov	r0, r5
ARM GAS  /tmp/ccZfTGz6.s 			page 22


 754 004c FFF7FEFF 		bl	USR_LSM6DSL_Set_Data
 755              	.LVL50:
 148:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL4_C,0b00000010);
 756              		.loc 1 148 0
 757 0050 6022     		movs	r2, #96
 758 0052 1121     		movs	r1, #17
 759 0054 2846     		mov	r0, r5
 760 0056 FFF7FEFF 		bl	USR_LSM6DSL_Set_Data
 761              	.LVL51:
 149:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL6_C,0b00000010);
 762              		.loc 1 149 0
 763 005a 0222     		movs	r2, #2
 764 005c 1321     		movs	r1, #19
 765 005e 2846     		mov	r0, r5
 766 0060 FFF7FEFF 		bl	USR_LSM6DSL_Set_Data
 767              	.LVL52:
 150:Src/main.c    **** 	USR_LSM6DSL_Set_Data(&hi2c1,CTRL7_G,0b00000000);
 768              		.loc 1 150 0
 769 0064 0222     		movs	r2, #2
 770 0066 1521     		movs	r1, #21
 771 0068 2846     		mov	r0, r5
 772 006a FFF7FEFF 		bl	USR_LSM6DSL_Set_Data
 773              	.LVL53:
 151:Src/main.c    **** 	HAL_Delay(1000);
 774              		.loc 1 151 0
 775 006e 2246     		mov	r2, r4
 776 0070 1621     		movs	r1, #22
 777 0072 2846     		mov	r0, r5
 778 0074 FFF7FEFF 		bl	USR_LSM6DSL_Set_Data
 779              	.LVL54:
 152:Src/main.c    **** 	
 780              		.loc 1 152 0
 781 0078 4FF47A70 		mov	r0, #1000
 782 007c FFF7FEFF 		bl	HAL_Delay
 783              	.LVL55:
 154:Src/main.c    **** 		USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 784              		.loc 1 154 0
 785 0080 19E0     		b	.L38
 786              	.LVL56:
 787              	.L39:
 155:Src/main.c    **** 		gyravg[0]+=gyrdata[0];
 788              		.loc 1 155 0 discriminator 3
 789 0082 0AA9     		add	r1, sp, #40
 790 0084 8E48     		ldr	r0, .L46+24
 791 0086 FFF7FEFF 		bl	USR_LSM6DSL_GY_Read_ALL
 792              	.LVL57:
 156:Src/main.c    **** 		gyravg[1]+=gyrdata[1];
 793              		.loc 1 156 0 discriminator 3
 794 008a BDF82820 		ldrh	r2, [sp, #40]
 795 008e BDF82030 		ldrh	r3, [sp, #32]
 796 0092 1344     		add	r3, r3, r2
 797 0094 ADF82030 		strh	r3, [sp, #32]	@ movhi
 157:Src/main.c    **** 		gyravg[2]+=gyrdata[2];
 798              		.loc 1 157 0 discriminator 3
 799 0098 BDF82A20 		ldrh	r2, [sp, #42]
 800 009c BDF82230 		ldrh	r3, [sp, #34]
 801 00a0 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccZfTGz6.s 			page 23


 802 00a2 ADF82230 		strh	r3, [sp, #34]	@ movhi
 158:Src/main.c    **** 	}
 803              		.loc 1 158 0 discriminator 3
 804 00a6 BDF82C20 		ldrh	r2, [sp, #44]
 805 00aa BDF82430 		ldrh	r3, [sp, #36]
 806 00ae 1344     		add	r3, r3, r2
 807 00b0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 154:Src/main.c    **** 		USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 808              		.loc 1 154 0 discriminator 3
 809 00b4 0134     		adds	r4, r4, #1
 810              	.LVL58:
 811              	.L38:
 154:Src/main.c    **** 		USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 812              		.loc 1 154 0 is_stmt 0 discriminator 1
 813 00b6 092C     		cmp	r4, #9
 814 00b8 E3DD     		ble	.L39
 160:Src/main.c    **** 	gyravg[1]/=10;
 815              		.loc 1 160 0 is_stmt 1
 816 00ba BDF92030 		ldrsh	r3, [sp, #32]
 817 00be 814A     		ldr	r2, .L46+28
 818 00c0 82FB0301 		smull	r0, r1, r2, r3
 819 00c4 DB17     		asrs	r3, r3, #31
 820 00c6 C3EBA103 		rsb	r3, r3, r1, asr #2
 821 00ca ADF82030 		strh	r3, [sp, #32]	@ movhi
 161:Src/main.c    **** 	gyravg[2]/=10;
 822              		.loc 1 161 0
 823 00ce BDF92230 		ldrsh	r3, [sp, #34]
 824 00d2 82FB0301 		smull	r0, r1, r2, r3
 825 00d6 DB17     		asrs	r3, r3, #31
 826 00d8 C3EBA103 		rsb	r3, r3, r1, asr #2
 827 00dc ADF82230 		strh	r3, [sp, #34]	@ movhi
 162:Src/main.c    **** 
 828              		.loc 1 162 0
 829 00e0 BDF92430 		ldrsh	r3, [sp, #36]
 830 00e4 82FB0312 		smull	r1, r2, r2, r3
 831 00e8 DB17     		asrs	r3, r3, #31
 832 00ea C3EBA203 		rsb	r3, r3, r2, asr #2
 833 00ee ADF82430 		strh	r3, [sp, #36]	@ movhi
 834              	.LVL59:
 835              	.L43:
 170:Src/main.c    **** 		USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 836              		.loc 1 170 0
 837 00f2 734C     		ldr	r4, .L46+24
 838 00f4 0CA9     		add	r1, sp, #48
 839 00f6 2046     		mov	r0, r4
 840 00f8 FFF7FEFF 		bl	USR_LSM6DSL_XL_Read_ALL
 841              	.LVL60:
 171:Src/main.c    **** 		if(!HAL_GPIO_ReadPin(B1_GPIO_Port,B1_Pin)){
 842              		.loc 1 171 0
 843 00fc 0AA9     		add	r1, sp, #40
 844 00fe 2046     		mov	r0, r4
 845 0100 FFF7FEFF 		bl	USR_LSM6DSL_GY_Read_ALL
 846              	.LVL61:
 172:Src/main.c    **** 			for(i=0;i<10;i++){
 847              		.loc 1 172 0
 848 0104 4FF40051 		mov	r1, #8192
 849 0108 6F48     		ldr	r0, .L46+32
ARM GAS  /tmp/ccZfTGz6.s 			page 24


 850 010a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 851              	.LVL62:
 852 010e D8B1     		cbz	r0, .L44
 853 0110 39E0     		b	.L41
 854              	.LVL63:
 855              	.L42:
 174:Src/main.c    **** 					gyravg[0]+=gyrdata[0];
 856              		.loc 1 174 0 discriminator 3
 857 0112 0AA9     		add	r1, sp, #40
 858 0114 6A48     		ldr	r0, .L46+24
 859 0116 FFF7FEFF 		bl	USR_LSM6DSL_GY_Read_ALL
 860              	.LVL64:
 175:Src/main.c    **** 					gyravg[1]+=gyrdata[1];
 861              		.loc 1 175 0 discriminator 3
 862 011a BDF82820 		ldrh	r2, [sp, #40]
 863 011e BDF82030 		ldrh	r3, [sp, #32]
 864 0122 1344     		add	r3, r3, r2
 865 0124 ADF82030 		strh	r3, [sp, #32]	@ movhi
 176:Src/main.c    **** 					gyravg[2]+=gyrdata[2];
 866              		.loc 1 176 0 discriminator 3
 867 0128 BDF82A20 		ldrh	r2, [sp, #42]
 868 012c BDF82230 		ldrh	r3, [sp, #34]
 869 0130 1344     		add	r3, r3, r2
 870 0132 ADF82230 		strh	r3, [sp, #34]	@ movhi
 177:Src/main.c    **** 				}
 871              		.loc 1 177 0 discriminator 3
 872 0136 BDF82C20 		ldrh	r2, [sp, #44]
 873 013a BDF82430 		ldrh	r3, [sp, #36]
 874 013e 1344     		add	r3, r3, r2
 875 0140 ADF82430 		strh	r3, [sp, #36]	@ movhi
 173:Src/main.c    **** 					USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 876              		.loc 1 173 0 discriminator 3
 877 0144 0134     		adds	r4, r4, #1
 878              	.LVL65:
 879 0146 00E0     		b	.L40
 880              	.LVL66:
 881              	.L44:
 882 0148 0024     		movs	r4, #0
 883              	.L40:
 884              	.LVL67:
 173:Src/main.c    **** 					USR_LSM6DSL_GY_Read_ALL(&hi2c1,gyrdata);
 885              		.loc 1 173 0 is_stmt 0 discriminator 1
 886 014a 092C     		cmp	r4, #9
 887 014c E1DD     		ble	.L42
 179:Src/main.c    **** 			gyravg[1]/=10;
 888              		.loc 1 179 0 is_stmt 1
 889 014e BDF92020 		ldrsh	r2, [sp, #32]
 890 0152 5C49     		ldr	r1, .L46+28
 891 0154 81FB0203 		smull	r0, r3, r1, r2
 892 0158 D217     		asrs	r2, r2, #31
 893 015a C2EBA302 		rsb	r2, r2, r3, asr #2
 894 015e ADF82020 		strh	r2, [sp, #32]	@ movhi
 180:Src/main.c    **** 			gyravg[2]/=10;
 895              		.loc 1 180 0
 896 0162 BDF92220 		ldrsh	r2, [sp, #34]
 897 0166 81FB0203 		smull	r0, r3, r1, r2
 898 016a D217     		asrs	r2, r2, #31
ARM GAS  /tmp/ccZfTGz6.s 			page 25


 899 016c C2EBA302 		rsb	r2, r2, r3, asr #2
 900 0170 ADF82220 		strh	r2, [sp, #34]	@ movhi
 181:Src/main.c    **** 		}
 901              		.loc 1 181 0
 902 0174 BDF92430 		ldrsh	r3, [sp, #36]
 903 0178 81FB0321 		smull	r2, r1, r1, r3
 904 017c DB17     		asrs	r3, r3, #31
 905 017e C3EBA103 		rsb	r3, r3, r1, asr #2
 906 0182 ADF82430 		strh	r3, [sp, #36]	@ movhi
 907              	.LVL68:
 908              	.L41:
 184:Src/main.c    **** 		angspdata[1]+=((float)(gyrdata[1]-gyravg[1]))*0.001/245.0;
 909              		.loc 1 184 0
 910 0186 BDF92830 		ldrsh	r3, [sp, #40]
 911 018a BDF92000 		ldrsh	r0, [sp, #32]
 912 018e 181A     		subs	r0, r3, r0
 913 0190 07EE900A 		vmov	s15, r0	@ int
 914 0194 F8EEE77A 		vcvt.f32.s32	s15, s15
 915 0198 17EE900A 		vmov	r0, s15
 916 019c FFF7FEFF 		bl	__aeabi_f2d
 917              	.LVL69:
 918 01a0 41A3     		adr	r3, .L46
 919 01a2 D3E90023 		ldrd	r2, [r3]
 920 01a6 FFF7FEFF 		bl	__aeabi_dmul
 921              	.LVL70:
 922 01aa 41A3     		adr	r3, .L46+8
 923 01ac D3E90023 		ldrd	r2, [r3]
 924 01b0 FFF7FEFF 		bl	__aeabi_ddiv
 925              	.LVL71:
 926 01b4 0446     		mov	r4, r0
 927 01b6 0D46     		mov	r5, r1
 928 01b8 0598     		ldr	r0, [sp, #20]	@ float
 929 01ba FFF7FEFF 		bl	__aeabi_f2d
 930              	.LVL72:
 931 01be 2246     		mov	r2, r4
 932 01c0 2B46     		mov	r3, r5
 933 01c2 FFF7FEFF 		bl	__aeabi_dadd
 934              	.LVL73:
 935 01c6 FFF7FEFF 		bl	__aeabi_d2f
 936              	.LVL74:
 937 01ca 08EE900A 		vmov	s17, r0
 938 01ce 0590     		str	r0, [sp, #20]	@ float
 185:Src/main.c    **** 		angspdata[2]+=((float)(gyrdata[2]-gyravg[2]))*0.001/245.0;
 939              		.loc 1 185 0
 940 01d0 BDF92A30 		ldrsh	r3, [sp, #42]
 941 01d4 BDF92200 		ldrsh	r0, [sp, #34]
 942 01d8 181A     		subs	r0, r3, r0
 943 01da 07EE900A 		vmov	s15, r0	@ int
 944 01de F8EEE77A 		vcvt.f32.s32	s15, s15
 945 01e2 17EE900A 		vmov	r0, s15
 946 01e6 FFF7FEFF 		bl	__aeabi_f2d
 947              	.LVL75:
 948 01ea 2FA3     		adr	r3, .L46
 949 01ec D3E90023 		ldrd	r2, [r3]
 950 01f0 FFF7FEFF 		bl	__aeabi_dmul
 951              	.LVL76:
 952 01f4 2EA3     		adr	r3, .L46+8
ARM GAS  /tmp/ccZfTGz6.s 			page 26


 953 01f6 D3E90023 		ldrd	r2, [r3]
 954 01fa FFF7FEFF 		bl	__aeabi_ddiv
 955              	.LVL77:
 956 01fe 0446     		mov	r4, r0
 957 0200 0D46     		mov	r5, r1
 958 0202 0698     		ldr	r0, [sp, #24]	@ float
 959 0204 FFF7FEFF 		bl	__aeabi_f2d
 960              	.LVL78:
 961 0208 2246     		mov	r2, r4
 962 020a 2B46     		mov	r3, r5
 963 020c FFF7FEFF 		bl	__aeabi_dadd
 964              	.LVL79:
 965 0210 FFF7FEFF 		bl	__aeabi_d2f
 966              	.LVL80:
 967 0214 08EE100A 		vmov	s16, r0
 968 0218 0690     		str	r0, [sp, #24]	@ float
 186:Src/main.c    **** 	
 969              		.loc 1 186 0
 970 021a BDF92C30 		ldrsh	r3, [sp, #44]
 971 021e BDF92400 		ldrsh	r0, [sp, #36]
 972 0222 181A     		subs	r0, r3, r0
 973 0224 07EE900A 		vmov	s15, r0	@ int
 974 0228 F8EEE77A 		vcvt.f32.s32	s15, s15
 975 022c 17EE900A 		vmov	r0, s15
 976 0230 FFF7FEFF 		bl	__aeabi_f2d
 977              	.LVL81:
 978 0234 1CA3     		adr	r3, .L46
 979 0236 D3E90023 		ldrd	r2, [r3]
 980 023a FFF7FEFF 		bl	__aeabi_dmul
 981              	.LVL82:
 982 023e 1CA3     		adr	r3, .L46+8
 983 0240 D3E90023 		ldrd	r2, [r3]
 984 0244 FFF7FEFF 		bl	__aeabi_ddiv
 985              	.LVL83:
 986 0248 0446     		mov	r4, r0
 987 024a 0D46     		mov	r5, r1
 988 024c 0798     		ldr	r0, [sp, #28]	@ float
 989 024e FFF7FEFF 		bl	__aeabi_f2d
 990              	.LVL84:
 991 0252 2246     		mov	r2, r4
 992 0254 2B46     		mov	r3, r5
 993 0256 FFF7FEFF 		bl	__aeabi_dadd
 994              	.LVL85:
 995 025a FFF7FEFF 		bl	__aeabi_d2f
 996              	.LVL86:
 997 025e 07EE900A 		vmov	s15, r0
 998 0262 0790     		str	r0, [sp, #28]	@ float
 192:Src/main.c    **** 				,(int16_t)(angspdata[1])
 999              		.loc 1 192 0
 1000 0264 BDEEE87A 		vcvt.s32.f32	s14, s17
 1001 0268 8DED017A 		vstr.32	s14, [sp, #4]	@ int
 193:Src/main.c    **** 				,(int16_t)(angspdata[2]));
 1002              		.loc 1 193 0
 1003 026c BDEEC87A 		vcvt.s32.f32	s14, s16
 1004 0270 8DED027A 		vstr.32	s14, [sp, #8]	@ int
 194:Src/main.c    **** //		xprintf("%d %d %d ",gyrdata[0],gyrdata[1],gyrdata[2]);	
 1005              		.loc 1 194 0
ARM GAS  /tmp/ccZfTGz6.s 			page 27


 1006 0274 FDEEE77A 		vcvt.s32.f32	s15, s15
 1007 0278 CDED037A 		vstr.32	s15, [sp, #12]	@ int
 191:Src/main.c    **** 				,(int16_t)(angspdata[0])
 1008              		.loc 1 191 0
 1009 027c BDF90C30 		ldrsh	r3, [sp, #12]
 1010 0280 BDF90820 		ldrsh	r2, [sp, #8]
 1011 0284 BDF90410 		ldrsh	r1, [sp, #4]
 1012 0288 1048     		ldr	r0, .L46+36
 1013 028a FFF7FEFF 		bl	xprintf
 1014              	.LVL87:
 201:Src/main.c    **** 		HAL_GPIO_TogglePin(LD2_GPIO_Port,LD2_Pin);
 1015              		.loc 1 201 0
 1016 028e 1048     		ldr	r0, .L46+40
 1017 0290 FFF7FEFF 		bl	xprintf
 1018              	.LVL88:
 202:Src/main.c    **** 		HAL_Delay(1);
 1019              		.loc 1 202 0
 1020 0294 2021     		movs	r1, #32
 1021 0296 0F48     		ldr	r0, .L46+44
 1022 0298 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1023              	.LVL89:
 203:Src/main.c    **** 	}
 1024              		.loc 1 203 0
 1025 029c 0120     		movs	r0, #1
 1026 029e FFF7FEFF 		bl	HAL_Delay
 1027              	.LVL90:
 204:Src/main.c    ****   /* USER CODE END 3 */
 1028              		.loc 1 204 0
 1029 02a2 26E7     		b	.L43
 1030              	.L47:
 1031 02a4 AFF30080 		.align	3
 1032              	.L46:
 1033 02a8 FCA9F1D2 		.word	-755914244
 1034 02ac 4D62503F 		.word	1062232653
 1035 02b0 00000000 		.word	0
 1036 02b4 00A06E40 		.word	1080991744
 1037 02b8 00000000 		.word	uart_putc_wrap
 1038 02bc 00000000 		.word	xfunc_out
 1039 02c0 00000000 		.word	hi2c1
 1040 02c4 67666666 		.word	1717986919
 1041 02c8 00080240 		.word	1073874944
 1042 02cc 0C000000 		.word	.LC1
 1043 02d0 18000000 		.word	.LC2
 1044 02d4 00000240 		.word	1073872896
 1045              		.cfi_endproc
 1046              	.LFE124:
 1048              		.comm	huart2,64,4
 1049              		.comm	hi2c1,84,4
 1050              		.section	.rodata.str1.4,"aMS",%progbits,1
 1051              		.align	2
 1052              	.LC0:
 1053 0000 5372632F 		.ascii	"Src/main.c\000"
 1053      6D61696E 
 1053      2E6300
 1054 000b 00       		.space	1
 1055              	.LC1:
 1056 000c 25642025 		.ascii	"%d %d %d \000"
ARM GAS  /tmp/ccZfTGz6.s 			page 28


 1056      64202564 
 1056      2000
 1057 0016 0000     		.space	2
 1058              	.LC2:
 1059 0018 0A00     		.ascii	"\012\000"
 1060              		.text
 1061              	.Letext0:
 1062              		.file 2 "/usr/local/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 1063              		.file 3 "/usr/local/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 1064              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1065              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1066              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1067              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1068              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1069              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1070              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1071              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1072              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 1073              		.file 13 "util/xprintf.h"
 1074              		.file 14 "util/print.h"
 1075              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1076              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccZfTGz6.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccZfTGz6.s:22     .text.uart_putc_wrap:00000000 $t
     /tmp/ccZfTGz6.s:27     .text.uart_putc_wrap:00000000 uart_putc_wrap
     /tmp/ccZfTGz6.s:50     .text.uart_putc_wrap:0000000c $d
                            *COM*:00000040 huart2
     /tmp/ccZfTGz6.s:55     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccZfTGz6.s:59     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccZfTGz6.s:164    .text.MX_GPIO_Init:00000090 $d
     /tmp/ccZfTGz6.s:172    .text.USR_LSM6DSL_Set_Data:00000000 $t
     /tmp/ccZfTGz6.s:177    .text.USR_LSM6DSL_Set_Data:00000000 USR_LSM6DSL_Set_Data
     /tmp/ccZfTGz6.s:216    .text.USR_LSM6DSL_Get_Data:00000000 $t
     /tmp/ccZfTGz6.s:221    .text.USR_LSM6DSL_Get_Data:00000000 USR_LSM6DSL_Get_Data
     /tmp/ccZfTGz6.s:262    .text.USR_LSM6DSL_Get_Data:0000002c $d
                            *COM*:00000054 hi2c1
     /tmp/ccZfTGz6.s:267    .text.USR_LSM6DSL_XL_Read_ALL:00000000 $t
     /tmp/ccZfTGz6.s:272    .text.USR_LSM6DSL_XL_Read_ALL:00000000 USR_LSM6DSL_XL_Read_ALL
     /tmp/ccZfTGz6.s:335    .text.USR_LSM6DSL_GY_Read_ALL:00000000 $t
     /tmp/ccZfTGz6.s:340    .text.USR_LSM6DSL_GY_Read_ALL:00000000 USR_LSM6DSL_GY_Read_ALL
     /tmp/ccZfTGz6.s:403    .text._Error_Handler:00000000 $t
     /tmp/ccZfTGz6.s:408    .text._Error_Handler:00000000 _Error_Handler
     /tmp/ccZfTGz6.s:423    .text.MX_I2C1_Init:00000000 $t
     /tmp/ccZfTGz6.s:427    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
     /tmp/ccZfTGz6.s:476    .text.MX_I2C1_Init:00000034 $d
     /tmp/ccZfTGz6.s:484    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccZfTGz6.s:488    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccZfTGz6.s:534    .text.MX_USART2_UART_Init:00000030 $d
     /tmp/ccZfTGz6.s:541    .text.SystemClock_Config:00000000 $t
     /tmp/ccZfTGz6.s:546    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccZfTGz6.s:672    .text.SystemClock_Config:000000b4 $d
     /tmp/ccZfTGz6.s:685    .text.main:00000000 $t
     /tmp/ccZfTGz6.s:690    .text.main:00000000 main
     /tmp/ccZfTGz6.s:1033   .text.main:000002a8 $d
     /tmp/ccZfTGz6.s:1051   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
uart_putc
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Mem_Write
HAL_I2C_Mem_Read
HAL_I2C_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
HAL_Init
HAL_Delay
ARM GAS  /tmp/ccZfTGz6.s 			page 30


HAL_GPIO_ReadPin
xprintf
HAL_GPIO_TogglePin
xfunc_out
